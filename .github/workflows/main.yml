name: CI
on:
  push:
    branches: [main]
    tags-ignore: [dev]
  pull_request:
    branches: [main]
  workflow_dispatch:
defaults:
  run:
    shell: bash

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read #  to fetch code (actions/checkout)

jobs:
  # Run `cargo clippy` over everything on the host platform.
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - run: cargo clippy --no-deps --all --all-features --all-targets -- -D warnings

  # Run `cargo clippy` over Wasm-specific crates on the Wasm target.
  clippy_wasm:
    strategy:
      matrix:
        include:
          - name: "all features"
            rust-version: stable
            flags: >
              --all-features
              --all-targets
          - name: "no_std"
            rust-version: stable
            # Can't use `--all-targets` because tests depend on default features.
            flags: --no-default-features
          - name: "with `atomics`"
            rust-version: nightly-2025-08-04
            rustup_components: rust-src
            flags: >
              -Zbuild-std=core,alloc
              --config 'target.wasm32-unknown-unknown.rustflags="-Ctarget-feature=+atomics"'
    name: Clippy Wasm-specific crates (${{ matrix.name }})
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - run: rustup default ${{ matrix.rust-version }}
    - run: rustup component add clippy ${{ matrix.rustup_components }}
    - run: rustup target add wasm32-unknown-unknown
    - run: >
        cargo clippy
        --all
        --target wasm32-unknown-unknown
        --exclude wasm-bindgen-cli*
        --exclude wasm-bindgen-*macro
        --exclude wasm-bindgen-webidl
        --exclude msrv-*-test
        ${{ matrix.flags }}
        -- -D warnings
