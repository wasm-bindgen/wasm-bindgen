error[E0277]: the trait bound `Result<(), ()>: IntoJsResult` is not satisfied
  --> ui-tests/async-errors.rs:51:24
   |
51 | pub async fn bad1() -> Result<(), ()> {
   |                        ^^^^^^^^^^^^^^ the trait `IntoJsResult` is not implemented for `Result<(), ()>`
   |
   = help: the following other types implement trait `IntoJsResult`:
             Result<(), E>
             Result<T, E>

error[E0277]: the trait bound `Result<(), BadType>: IntoJsResult` is not satisfied
  --> ui-tests/async-errors.rs:55:24
   |
55 | pub async fn bad2() -> Result<(), BadType> {
   |                        ^^^^^^^^^^^^^^^^^^^ the trait `IntoJsResult` is not implemented for `Result<(), BadType>`
   |
   = help: the following other types implement trait `IntoJsResult`:
             Result<(), E>
             Result<T, E>

error[E0277]: the trait bound `JsRef: From<BadType>` is not satisfied
  --> ui-tests/async-errors.rs:59:24
   |
59 | pub async fn bad3() -> BadType {
   |                        ^^^^^^^ the trait `From<BadType>` is not implemented for `JsRef`
   |
   = help: the following other types implement trait `From<T>`:
             `JsRef` implements `From<&String>`
             `JsRef` implements `From<&T>`
             `JsRef` implements `From<&str>`
             `JsRef` implements `From<*const T>`
             `JsRef` implements `From<*mut T>`
             `JsRef` implements `From<AnyType>`
             `JsRef` implements `From<Array>`
             `JsRef` implements `From<ArrayBuffer>`
             `JsRef` implements `From<BigInt64Array>`
           and $N others
   = note: required for `BadType` to implement `Into<JsRef>`
   = note: required for `BadType` to implement `IntoJsResult`

error[E0277]: the trait bound `Result<BadType, JsRef>: IntoJsResult` is not satisfied
  --> ui-tests/async-errors.rs:63:24
   |
63 | pub async fn bad4() -> Result<BadType, JsValue> {
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `IntoJsResult` is not implemented for `Result<BadType, JsRef>`
   |
   = help: the following other types implement trait `IntoJsResult`:
             Result<(), E>
             Result<T, E>
